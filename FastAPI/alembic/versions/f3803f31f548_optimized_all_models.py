"""optimized all models

Revision ID: f3803f31f548
Revises: 
Create Date: 2024-03-17 15:10:45.854493

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "f3803f31f548"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "founds",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("discord", sa.String(), nullable=True),
        sa.Column("link", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_founds_id"), "founds", ["id"], unique=False)
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(length=64), nullable=False),
        sa.Column("first_name", sa.String(length=64), nullable=True),
        sa.Column("last_name", sa.String(length=64), nullable=True),
        sa.Column("by_fathers_name", sa.String(length=64), nullable=True),
        sa.Column("contact_fields", sa.JSON(none_as_null=True), nullable=True),
        sa.Column("nicknames", sa.JSON(none_as_null=True), nullable=True),
        sa.Column("gipsy_team", sa.String(length=256), nullable=True),
        sa.Column("address", sa.Text(), nullable=True),
        sa.Column(
            "role",
            sa.Enum("ADMIN", "MANAGER", "USER", "READ_ONLY", name="roles"),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default="now()",
            nullable=False,
        ),
        sa.Column("email", sa.String(length=320), nullable=False),
        sa.Column("hashed_password", sa.String(length=1024), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_superuser", sa.Boolean(), nullable=False),
        sa.Column("is_verified", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("username"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_table(
        "managers_founds",
        sa.Column("manager_id", sa.Integer(), nullable=False),
        sa.Column("founds_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["founds_id"],
            ["founds.id"],
        ),
        sa.ForeignKeyConstraint(
            ["manager_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("manager_id", "founds_id"),
    )
    op.create_table(
        "records",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("found_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("arbitrage", sa.String(length=64), nullable=True),
        sa.Column("comment", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["found_id"],
            ["founds.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_records_id"), "records", ["id"], unique=False)
    op.create_table(
        "users_founds",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("founds_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["founds_id"],
            ["founds.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "founds_id"),
    )
    op.create_table(
        "records_history",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("found_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("arbitrage", sa.String(length=64), nullable=True),
        sa.Column("comment", sa.Text(), nullable=False),
        sa.Column("current_version", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["current_version"],
            ["records.id"],
        ),
        sa.ForeignKeyConstraint(
            ["found_id"],
            ["founds.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_records_history_id"), "records_history", ["id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_records_history_id"), table_name="records_history")
    op.drop_table("records_history")
    op.drop_table("users_founds")
    op.drop_index(op.f("ix_records_id"), table_name="records")
    op.drop_table("records")
    op.drop_table("managers_founds")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_founds_id"), table_name="founds")
    op.drop_table("founds")
    # ### end Alembic commands ###
